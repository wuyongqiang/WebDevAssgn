<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="7eeaf130-63c9-4a48-94c0-29a8c9393ef0" name="wuyq@POS744 2011-04-06 20:46:12" runUser="POS744\wuyq" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="0ba809b6-7e05-4f0e-a3d9-7ff8e45887e5">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment enabled="false" runDeploymentRoot="wuyq_POS744 2011-04-06 20_46_12">
      <DeploymentItem filename="d:\MyDocs\Visual Studio 2010\Projects\GitExtTest\PersistData\bin\Debug\PersistData.dll" />
    </Deployment>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2011-04-06T20:46:12.1250000+08:00" queuing="2011-04-06T20:46:13.9531250+08:00" start="2011-04-06T20:46:14.1250000+08:00" finish="2011-04-06T20:46:27.3593750+08:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="TestMethod1" storage="d:\mydocs\visual studio 2010\projects\gitexttest\testproject_persist\bin\debug\testproject_persist.dll" id="f98ae9e8-ea37-41ef-f607-119e6fe0cae0">
      <Execution id="221e6944-11d3-4a04-8bf6-0d9b1b8201a4" />
      <TestMethod codeBase="d:/MyDocs/Visual Studio 2010/Projects/GitExtTest/TestProject_Persist/bin/Debug/TestProject_Persist.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject_Persist.PersitDataUnitTest, TestProject_Persist, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="TestMethod1" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="f98ae9e8-ea37-41ef-f607-119e6fe0cae0" executionId="221e6944-11d3-4a04-8bf6-0d9b1b8201a4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="221e6944-11d3-4a04-8bf6-0d9b1b8201a4" testId="f98ae9e8-ea37-41ef-f607-119e6fe0cae0" testName="TestMethod1" computerName="POS744" duration="00:00:11.9570266" startTime="2011-04-06T20:46:14.2656250+08:00" endTime="2011-04-06T20:46:27.2500000+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="221e6944-11d3-4a04-8bf6-0d9b1b8201a4">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject_Persist.PersitDataUnitTest.TestMethod1 threw exception: 
System.TypeInitializationException: The type initializer for 'PersistData.NHibernateHelper' threw an exception. ---&gt; NHibernate.Bytecode.UnableToLoadProxyFactoryFactoryException: Unable to load type 'NHibernate.ByteCode.LinFu.ProxyFactoryFactory, NHibernate.ByteCode.LinFu' during configuration of proxy factory class.
Possible causes are:
- The NHibernate.Bytecode provider assembly was not deployed.
- The typeName used to initialize the 'proxyfactory.factory_class' property of the session-factory section is not well formed.

Solution:
Confirm that your deployment folder contains one of the following assemblies:
NHibernate.ByteCode.LinFu.dll
NHibernate.ByteCode.Castle.dll ---&gt; System.IO.FileNotFoundException: Could not load file or assembly 'NHibernate.ByteCode.LinFu' or one of its dependencies. 系统找不到指定的文件。=== Pre-bind state information ===
LOG: User = POS744\wuyq
LOG: DisplayName = NHibernate.ByteCode.LinFu
 (Partial)
WRN: Partial binding information was supplied for an assembly:
WRN: Assembly Name: NHibernate.ByteCode.LinFu | Domain ID: 2
WRN: A partial bind occurs when only part of the assembly display name is provided.
WRN: This might result in the binder loading an incorrect assembly.
WRN: It is recommended to provide a fully specified textual identity for the assembly,
WRN: that consists of the simple name, version, culture, and public key token.
WRN: See whitepaper http://go.microsoft.com/fwlink/?LinkId=109270 for more information and common solutions to this issue.
LOG: Appbase = file:///d:/MyDocs/Visual Studio 2010/Projects/GitExtTest/TestProject_Persist/bin/Debug
LOG: Initial PrivatePath = NULL
Calling assembly : NHibernate, Version=2.1.2.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4.
===
LOG: This bind starts in default load context.
LOG: Using application configuration file: E:\Program Files\Microsoft Visual Studio 10.0\Common7\IDE\QTAgent32.exe.Config
LOG: Using host configuration file: 
LOG: Using machine configuration file from C:\WINDOWS\Microsoft.NET\Framework\v4.0.30319\config\machine.config.
LOG: Policy not being applied to reference at this time (private, custom, partial, or location-based assembly bind).
LOG: The same bind was seen before, and was failed with hr = 0x80070002.
</Message>
          <StackTrace>    at System.Reflection.RuntimeAssembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, RuntimeAssembly locationHint, StackCrawlMark&amp; stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection, Boolean suppressSecurityChecks)
   at System.Reflection.RuntimeAssembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, RuntimeAssembly locationHint, StackCrawlMark&amp; stackMark, Boolean throwOnFileNotFound, Boolean forIntrospection, Boolean suppressSecurityChecks)
   at System.Reflection.RuntimeAssembly.InternalLoadAssemblyName(AssemblyName assemblyRef, Evidence assemblySecurity, StackCrawlMark&amp; stackMark, Boolean forIntrospection, Boolean suppressSecurityChecks)
   at System.Reflection.RuntimeAssembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark&amp; stackMark, Boolean forIntrospection)
   at System.Reflection.Assembly.Load(String assemblyString)
   at NHibernate.Util.ReflectHelper.TypeFromAssembly(AssemblyQualifiedTypeName name, Boolean throwOnError)
   at NHibernate.Util.ReflectHelper.ClassForName(String name)
   at NHibernate.Bytecode.AbstractBytecodeProvider.SetProxyFactoryFactory(String typeName)
 --- End of inner exception stack trace ---
    at NHibernate.Bytecode.AbstractBytecodeProvider.SetProxyFactoryFactory(String typeName)
   at NHibernate.Cfg.Configuration.ConfigureProxyFactoryFactory()
   at NHibernate.Cfg.Configuration.BuildSessionFactory()
   at PersistData.NHibernateHelper..cctor() in d:\MyDocs\Visual Studio 2010\Projects\GitExtTest\PersistData\NHibernateHelper.cs:line 20
 --- End of inner exception stack trace ---
    at PersistData.NHibernateHelper.GetCurrentSession()
   at PersistData.DishItemObjs.GetAllDishItem() in d:\MyDocs\Visual Studio 2010\Projects\GitExtTest\PersistData\DishItemObjs.cs:line 18
   at TestProject_Persist.PersitDataUnitTest.TestMethod1() in d:\MyDocs\Visual Studio 2010\Projects\GitExtTest\TestProject_Persist\PersitDataUnitTest.cs:line 17
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>